h1(class="text-3xl font-bold text-gray-800 mb-6") SAML IdP 연동 관리
div(class="bg-white border border-gray-200 rounded-lg shadow-sm w-full")
    div(class="flex items-center justify-between p-4 border-b border-gray-200")
        div(class="flex items-center")
            svg(xmlns="http://www.w3.org/2000/svg", class="h-6 w-6 text-blue-500", fill="none", viewBox="0 0 24 24", stroke="currentColor", stroke-width="2")
                path(stroke-linecap="round", stroke-linejoin="round", d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z")
            h2(class="ml-3 text-lg font-semibold text-gray-700") Identity Provider 목록
        button((click)="add()", class="px-4 py-2 bg-blue-500 text-white text-sm font-semibold rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors")
            | IdP 추가

    div(class="flex flex-col")
        div(class="grid grid-cols-12 gap-4 text-xs font-semibold text-gray-500 uppercase bg-gray-50 border-b border-gray-200 px-4 py-3")
            div(class="col-span-2") Key
            div(class="col-span-3") Display Name
            div(class="col-span-2") Metadata XML
            div(class="col-span-2 text-center") ICON
            div(class="col-span-1 text-center") Use
            div(class="col-span-2 text-right") Actions

        div(*ngIf="list.length === 0 && !newItem", class="text-center py-12 text-gray-500")
            p 등록된 IdP가 없습니다.
            p(class="text-sm mt-1") 'IdP 추가' 버튼을 눌러 새로운 설정을 시작하세요.

        div(*ngFor="let idp of list;let i = index", class="grid grid-cols-12 gap-4 items-center px-4 py-3 border-b border-gray-200 last:border-b-0 hover:bg-gray-50 transition-colors")
            div(class="col-span-2")
                input(type="text", [(ngModel)]="idp.key", placeholder="ex: my-idp-key", class="w-full rounded-md border-gray-300 shadow-sm text-sm focus:border-blue-500 focus:ring-blue-500")
            div(class="col-span-3")
                input(type="text", [(ngModel)]="idp.display_name", placeholder="표시될 이름", class="w-full rounded-md border-gray-300 shadow-sm text-sm focus:border-blue-500 focus:ring-blue-500")
            div(class="col-span-2")
                button((click)="viewXML(idp)", class="w-full px-3 py-2 bg-white border border-gray-300 text-gray-700 text-sm font-medium rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500")
                    | XML 보기
            div(class="col-span-2 flex justify-center")
                button.ml-2.self-center.w-24.h-9.border.border-gray-300.rounded-lg.bg-contain.bg-center.bg-cover.bg-no-repeat(*ngIf="idp.icon", style='background-image: url({{idp.icon}})', (click)="updateIcon(idp)")
                button.ml-2.px-3.py-2.bg-gray-500.text-white.text-sm.font-semibold.rounded-md(*ngIf="!idp.icon", class="hover:bg-gray-400", (click)="updateIcon(idp)") 아이콘 등록
                button.ml-2.p-1.text-blue-700.text-sm.font-semibold(*ngIf="idp.icon", class="hover:bg-red-50 rounded-lg", (click)="deleteIcon(idp)")
                    i.ti.ti-x(class="text-2xl text-red-500")
            div(class="col-span-1 flex justify-center")
                label(class="flex items-center cursor-pointer")
                    div(class="relative")
                        input(type="checkbox", class="sr-only", [(ngModel)]="idp.use", (ngModelChange)="service.render();")
                        div(class="block w-10 h-6 rounded-full", [ngClass]="idp.use ? 'bg-blue-500' : 'bg-gray-300'")
                        div(class="dot absolute left-1 top-1 bg-white w-4 h-4 rounded-full transition-transform", [ngClass]="{ 'translate-x-4': idp.use }")
            div(class="col-span-2 flex justify-end items-center space-x-2")
                button((click)="update(idp)", class="px-3 py-2 bg-green-500 text-white text-sm font-semibold rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors")
                    | Update
                button((click)="remove(idp)", class="p-2 text-gray-400 hover:text-red-600 hover:bg-red-100 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors")
                    i.ti.ti-trash(class="text-2xl text-red-500")

        ng-container(*ngIf="newItem")
            div(class="grid grid-cols-12 gap-4 items-center px-4 py-3 border-b border-gray-200 last:border-b-0 hover:bg-gray-50 transition-colors")
                div(class="col-span-2")
                    input(type="text", [(ngModel)]="newItem.key", placeholder="ex: my-idp-key", class="w-full rounded-md border-gray-300 shadow-sm text-sm focus:border-blue-500 focus:ring-blue-500")
                div(class="col-span-3")
                    input(type="text", [(ngModel)]="newItem.display_name", placeholder="표시될 이름", class="w-full rounded-md border-gray-300 shadow-sm text-sm focus:border-blue-500 focus:ring-blue-500")
                div(class="col-span-2")
                div(class="col-span-2 flex justify-center")
                    button.ml-2.self-center.w-24.h-9.border.border-gray-300.rounded-lg.bg-contain.bg-center.bg-cover.bg-no-repeat(*ngIf="newItem.icon", style='background-image: url({{newItem.icon}})', (click)="updateIcon(newItem)")
                    button.ml-2.px-3.py-2.bg-gray-500.text-white.text-sm.font-semibold.rounded-md(*ngIf="!newItem.icon", class="hover:bg-gray-400", (click)="updateIcon(newItem)") 아이콘 등록
                    button.ml-2.p-1.text-blue-700.text-sm.font-semibold(*ngIf="newItem.icon", class="hover:bg-red-50 rounded-lg", (click)="deleteIcon(newItem)")
                        i.ti.ti-x(class="text-2xl text-red-500")
                div(class="col-span-1 flex justify-center")
                    label(class="flex items-center cursor-pointer")
                        div(class="relative")
                            input(type="checkbox", class="sr-only", [(ngModel)]="newItem.use", (ngModelChange)="service.render();")
                            div(class="block w-10 h-6 rounded-full", [ngClass]="newItem.use ? 'bg-blue-500' : 'bg-gray-300'")
                            div(class="dot absolute left-1 top-1 bg-white w-4 h-4 rounded-full transition-transform", [ngClass]="{ 'translate-x-4': newItem.use }")
                div(class="col-span-2 flex justify-end items-center space-x-2")
                    button((click)="update(newItem)", class="px-3 py-2 bg-green-500 text-white text-sm font-semibold rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors")
                        | Update
                    button((click)="newItem = null;service.render();", class="p-2 text-gray-400 hover:text-red-600 hover:bg-red-100 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors")
                        i.ti.ti-trash(class="text-2xl text-red-500")
            div(class="grid grid-cols-12 gap-4 items-center px-4 py-3 border-b border-gray-200 last:border-b-0 hover:bg-gray-50 transition-colors")
                div(class="col-span-12")
                    textarea([(ngModel)]="newItem.xml_content", rows="10", placeholder="IdP Metadata XML", class="w-full rounded-md border-gray-300 shadow-sm text-sm focus:border-blue-500 focus:ring-blue-500 resize-y")

div(class="relative z-[99999]", *ngIf="modal")
    div(class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity")
    div(class="fixed inset-0 z-50 w-screen overflow-y-auto")
        div(class="flex min-h-full items-end justify-center text-center sm:items-center sm:p-0 w-4/5 max-w-[840px] mx-auto")
            div(class="relative flex flex-col transform rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 w-full max-h-[90vh] overflow-hidden")
                div(class="absolute top-0 right-0 size-8 flex items-center justify-center text-gray-500 hover:text-gray-900 text-xl cursor-pointer hover:scale-125 transition-all", (click)="modal=null;service.render();")
                    i.fa-solid.fa-xmark
                .flex.border-b.border-gray-300.py-3.px-5
                    h3(class="text-base font-semibold leading-6 text-gray-900") Metadata: {{modal.display_name}}
                div(class="relative flex-1 px-4 py-2 overflow-auto bg-slate-50 max-h-[700px]")
                    pre {{modal.xml}}
                .absolute.top-14.right-1.z-10.flex.gap-2
                    div.relative
                        button((click)="copyToClipboard(modal.xml)", class="size-7 text-sm bg-gray-100 hover:bg-gray-200 rounded-lg")
                            i.ti.ti-clipboard
                        div(*ngIf="showCopied", class="absolute -bottom-8 right-0 bg-gray-800 text-white text-xs px-2 py-1 rounded") Copied
                div(class="flex border-t border-gray-300 py-3 px-5")
                    button(class="rounded-md px-3 py-2 text-sm font-semibold text-gray-900 shadow-0 border border-gray-300 bg-white hover:border-black sm:mt-0 ml-auto sm:w-auto transition-all", (click)="modal=null;service.render();") 닫기


